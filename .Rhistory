fill(hispanic, .direction = "downup")
data_l <- data_l %>%
group_by(sid) %>%
fill(sex, .direction = "downup")
## removing some variables
data_l <- data_l %>%
select(- `ethnicity text`)
## removing some variables
data_l <- data_l %>%
select(- ethnicity_text)
## time as numeric
data_l %>%
mutate(time = as.numeric(time))
data_filt %>%
filter(scale_name == "rmpi") %>%
select(sid, time, survey_name, n_items) %>%
group_by(n_items) %>%
count() #rmpi - 852 missing, 325 completed
data_filt %>%
filter(scale_name == "rmpi") %>%
select(sid, time, survey_name, n_items) %>%
group_by(n_items, time) %>%
count()
data_filt %>%
filter(scale_name == "rmpi") %>%
ggplot(aes(x = score)) +
geom_histogram()
#Rutgers Marijuana Problematic Inventory
data_filt %>%
filter(scale_name == "RMPI") %>%
select(SID, time, survey_name, n_items) %>%
group_by(n_items) %>%
count() #RMPI - 852 missing, 325 completed
#Rutgers Marijuana Problematic Inventory
data_filt %>%
filter(scale_name == "RMPI") %>%
select(sid, time, survey_name, n_items) %>%
group_by(n_items) %>%
count() #RMPI - 852 missing, 325 completed
data_filt %>%
filter(scale_name == "RMPI") %>%
select(sid, time, survey_name, n_items) %>%
group_by(n_items, time) %>%
count()
data_filt %>%
filter(scale_name == "RMPI") %>%
ggplot(aes(x = score)) +
geom_histogram()
#Loneliness Scale
##n_items completed
data_filt %>%
filter(scale_name == "ULS-8") %>%
select(sid, time, survey_name, n_items) %>%
group_by(n_items) %>%
count()#ULS-8 not collected at T1. 1161 completed, 12 not completed
##n_items completed by timepoint
data_filt %>%
filter(scale_name == "ULS-8") %>%
select(sid, time, survey_name, n_items) %>%
group_by(n_items, time) %>%
count()
#Loneliness Scale
##n_items completed
data_filt %>%
filter(scale_name == "ULS-8") %>%
select(sid, time, survey_name, n_items) %>%
group_by(n_items) %>%
count()#ULS-8 not collected at T1. 1161 completed, 12 not completed
##n_items completed by timepoint
data_filt %>%
filter(scale_name == "ULS-8") %>%
select(sid, time, survey_name, n_items) %>%
group_by(n_items, time) %>%
count()
##change the dataset so that the score for 0 items filled = NA
data_filt$score[data_filt$n_items == 0] <- NA
##look at missing data
naniar::vis_miss(data_filt) #3% missing data in total, 28% scores missing
naniar::vis_miss(data_l) #73% missing data for RMPI .... that's a lot of missing data. Might be most appropriate to impute data.
##Number of completers at each timepoint
data_filt %>%
filter(scale_name == "ULS-8") %>%
select(sid, time, survey_name, n_items) %>%
group_by(n_items, time) %>%
count()
library(mice)
imp <- mice(data_l, m = 5)
View(imp)
view(imp)
imp$imp$age
imp$imp$rmpi
m0_imp <- with(imp, lmer(RMPI ~ time + (1|SID)))
m0_imp <- with(imp, lmer(rmpi ~ time + (1|SID)))
m0_imp <- with(imp, lmer(rmpi ~ time + (1|sid)))
summary(pool(m0_imp))
arm::display(pool(m0_imp))
arm::display(m0)
summary(pool(m0_imp))
confint(m0)
arm::display(m0)
summary(pool(m0_imp))
confint(m0)
m0_log <- lmer(RMPI_log ~ time + (1|SID),
data = data_l)
summary(pool(m0_imp))
m1_imp <- with(imp, lmer(rmpi ~ time + (time|sid)))
# m1 <- lmer(RMPI ~ time + (time|SID),
#            data = data_l)
#
# arm::display(m1)
control = lmerControl(check.nobs.vs.nRE = "warning")
m1_imp <- with(imp, lmer(rmpi ~ time + (time|sid)))
m1 <- lmer(RMPI ~ time + (time|SID),
data = data_l,
control = lmerControl(check.nobs.vs.nRE = "warning"))
m1 <- lmer(rmpi ~ time + (time|sid),
data = data_l,
control = lmerControl(check.nobs.vs.nRE = "warning"))
#
arm::display(m1)
arm::display(m1)
m1 <- lmer(rmpi ~ time + (time|sid),
data = data_l)
#,
#           control = lmerControl(check.nobs.vs.nRE = "warning"))
#
arm::display(m1)
m1 <- lmer(rmpi ~ time + (time|sid),
data = data_l,
control = lmerControl(check.nobs.vs.nRE = "warning"))
drop(m1)
remove(m1)
arm::display(m1)
m1 <- lmer(rmpi ~ time + (time|sid),
data = data_l,
control = lmerControl(check.nobs.vs.nRE = "warning"))
arm::display(m1)
m1_imp <- with(imp, lmer(rmpi ~ time + (time|sid)),
control = lmerControl(check.nobs.vs.nRE = "warning")))
m1_imp <- with(imp, lmer(rmpi ~ time + (time|sid)),
control = lmerControl(check.nobs.vs.nRE = "warning"))
summary(pool(m1_imp))
control = lmerControl(check.nobs.vs.nRE = "warning")
m1_imp <- with(imp, lmer(rmpi ~ time + (time|sid),
control = lmerControl(check.nobs.vs.nRE = "warning")))
summary(pool(m1_imp))
arm::display(m1)
summary(pool(m1_imp))
library(broom.mixed)
diagnostics_m0 <- augment(m0)
ggplot(data = diagnostics_m0, mapping = aes(x = .resid)) +
geom_histogram(binwidth = .50) + theme_classic() +
labs(title = "Histogram of Residuals",
x = "Residual Value") +
geom_vline(xintercept = c(-2.5, 2.5), linetype = "dotted")
shapiro.test(diagnostics_m0$.resid) #significant p-value --> normality violated
##with imputed
diagnostics_m0_imp <- augment(m0_imp)
shapiro.test(m0_imp$.resid) #significant p-value --> normality violated
diagnostics_m1 <- augment(m1)
ggplot(data = diagnostics_m1, mapping = aes(x = .resid)) +
geom_histogram(binwidth = .50) + theme_classic() +
labs(title = "Histogram of Residuals",
x = "Residual Value") +
geom_vline(xintercept = c(-2.5, 2.5), linetype = "dotted")
shapiro.test(diagnostics_m1$.resid
com <- complete(imp, "long")
com <- complete(imp, "long")
View(com)
new_imp <- merge_imputations(
data_l,
imp,
ori = NULL,
summary = c("none", "dens", "hist", "sd"),
filter = NULL
)
new_imp <- sjmisc::merge_imputations(
data_l,
imp,
ori = NULL,
summary = c("none", "dens", "hist", "sd"),
filter = NULL
)
install.packages("sjmisc")
new_imp <- sjmisc::merge_imputations(
data_l,
imp,
ori = NULL,
summary = c("none", "dens", "hist", "sd"),
filter = NULL
)
View(new_imp)
#https://strengejacke.github.io/sjmisc/reference/merge_imputations.html
merged_imputations <- sjmisc::merge_imputations(
data_imp,
imp,
ori = sid,
summary = c("none", "dens", "hist", "sd"),
filter = NULL
)
subject_id
subject_id <- data_l %>% select(sid)
#https://strengejacke.github.io/sjmisc/reference/merge_imputations.html
merged_imputations <- sjmisc::merge_imputations(
data_imp,
imp,
ori = subject_id,
summary = c("none", "dens", "hist", "sd"),
filter = NULL
)
merged_imputations <- sjmisc::merge_imputations(
data_imp,
imp,
ori = subject_id,
summary = c("none", "dens", "hist", "sd"),
filter = NULL
)
new_imp <- sjmisc::merge_imputations(
data_l,
imp,
ori = subject_id,
summary = c("none", "dens", "hist", "sd"),
filter = NULL
)
View(new_imp)
##spread in the imputed dataset
#histogram/distribution faceted by timepoint
data_filt %>%
ggplot(aes(x = "rmpi_imp")) +
geom_histogram(fill = "#61adff",
color = "white") +
facet_wrap(~time) #A lot of 0s - similar patterns at all of the timepoints. This is the outcome variable, so not going to transform it. Perhaps a zero-inflated model would be more appropriate.
##spread in the imputed dataset
#histogram/distribution faceted by timepoint
data_filt %>%
ggplot(aes(x = "rmpi_imp")) +
geom_bar(fill = "#61adff",
color = "white") +
facet_wrap(~time) #A lot of 0s - similar patterns at all of the timepoints. This is the outcome variable, so not going to transform it. Perhaps a zero-inflated model would be more appropriate.
histogram
##spread in the imputed dataset
#histogram/distribution faceted by timepoint
data_filt %>%
ggplot(aes(x = "rmpi_imp")) +
geom_count(fill = "#61adff",
color = "white") +
facet_wrap(~time) #A lot of 0s - similar patterns at all of the timepoints. This is the outcome variable, so not going to transform it. Perhaps a zero-inflated model would be more appropriate.
##spread in the imputed dataset
#histogram/distribution faceted by timepoint
data_filt %>%
ggplot(aes(x = "rmpi_imp")) +
geom_histogram(fill = "#61adff",
color = "white") +
facet_wrap(~time) #A lot of 0s - similar patterns at all of the timepoints. This is the outcome variable, so not going to transform it. Perhaps a zero-inflated model would be more appropriate.
##spread in the imputed dataset
#histogram/distribution faceted by timepoint
data_filt %>%
ggplot(aes(x = "sid", y = "rmpi_imp")) +
geom_bar(fill = "#61adff",
color = "white") +
facet_wrap(~time) #A lot of 0s - similar patterns at all of the timepoints. This is the outcome variable, so not going to transform it. Perhaps a zero-inflated model would be more appropriate.
##spread in the imputed dataset
#histogram/distribution faceted by timepoint
data_filt %>%
ggplot(aes(x = "sid", y = "rmpi_imp")) +
geom_bar(fill = "#61adff",
color = "white") #+
set.seed(1234)
imp <- mice(data_l, m = 5, print = FALSE)
subject_id <- data_l %>% select(sid)
new_imp <- sjmisc::merge_imputations(
data_l,
imp,
ori = subject_id,
summary = c("none", "dens", "hist", "sd"),
filter = NULL
) #use this dataframe to run the new imputed analyses and also be able to check for normality assumptions
View(new_imp)
##spread in the imputed dataset
#histogram/distribution faceted by timepoint
new_imp %>%
ggplot(aes(x = "rmpi_imp")) +
geom_histogram(fill = "#61adff",
color = "white") +
facet_wrap(~time) #A lot of 0s - similar patterns at all of the timepoints. This is the outcome variable, so not going to transform it. Perhaps a zero-inflated model would be more appropriate.
View(new_imp)
#https://strengejacke.github.io/sjmisc/reference/merge_imputations.html
#install.packages("sjmisc")
subject_id <- data_l %>% select(sid, time)
new_imp <- sjmisc::merge_imputations(
data_l,
imp,
ori = subject_id,
summary = c("none", "dens", "hist", "sd"),
filter = NULL
) #use this dataframe to run the new imputed analyses and also be able to check for normality assumptions
View(new_imp)
##spread in the imputed dataset
#histogram/distribution faceted by timepoint
new_imp %>%
ggplot(aes(x = "rmpi_imp")) +
geom_histogram(fill = "#61adff",
color = "white") +
facet_wrap(~time) #A lot of 0s - similar patterns at all of the timepoints. This is the outcome variable, so not going to transform it. Perhaps a zero-inflated model would be more appropriate.
##spread in the imputed dataset
#histogram/distribution faceted by timepoint
new_imp %>%
ggplot(aes(x = "rmpi_imp")) +
geom_bar(fill = "#61adff",
color = "white") +
facet_wrap(~time) #A lot of 0s - similar patterns at all of the timepoints. This is the outcome variable, so not going to transform it. Perhaps a zero-inflated model would be more appropriate.
#histogram/distribution faceted by timepoint
data_filt %>%
filter(scale_name == "RMPI") %>%
ggplot(aes(x = score)) +
geom_histogram(fill = "#61adff",
color = "white") #+
##average RMPIs at each timepoint
data_filt %>%
filter(scale_name == "RMPI")  %>%
group_by(time) %>%
summarise(mean(score, na.rm = T))
##spread in the imputed dataset
#histogram/distribution faceted by timepoint
new_imp %>%
ggplot(aes(x = "rmpi_imp")) +
geom_bar(fill = "#61adff",
color = "white") #+
#facet_wrap(~time) #A lot of 0s - similar patterns at all of the timepoints. This is the outcome variable, so not going to transform it. Perhaps a zero-inflated model would be more appropriate.
new_imp %>%
ggplot(aes(x = "rmpi_imp")) +
geom_bar(fill = "#61adff",
color = "white",
stat = "count")
stat = "count")
#facet_wrap(~time) #A lot of 0s - similar patterns at all of the timepoints. This is the outcome variable, so not going to transform it. Perhaps a zero-inflated model would be more appropriate.
new_imp %>%
ggplot() +
geom_bar(aes(x = "rmpi_imp",
fill = "#61adff",
color = "white",
stat = "count"))
#facet_wrap(~time) #A lot of 0s - similar patterns at all of the timepoints. This is the outcome variable, so not going to transform it. Perhaps a zero-inflated model would be more appropriate.
new_imp %>%
ggplot() +
geom_bar(aes(x = "rmpi_imp",
fill = as.factor(time),
color = "white",
stat = "count"))
#facet_wrap(~time) #A lot of 0s - similar patterns at all of the timepoints. This is the outcome variable, so not going to transform it. Perhaps a zero-inflated model would be more appropriate.
new_imp %>%
ggplot() +
geom_bar(aes(x = "rmpi_imp",
fill = as.factor(time),
position = "dodge",
color = "white",
stat = "count"))
View(data_filt)
ggplot(aes(x = "rmpi_imp", y = "count") +
##spread in the imputed dataset
#histogram/distribution faceted by timepoint
new_imp %>%
ggplot(aes(x = "rmpi_imp", y = "count")) +
geom_bar(fill = "#61adff",
color = "white") #+
new_imp %>%
##spread in the imputed dataset
#histogram/distribution faceted by timepoint
new_imp %>%
ggplot(aes(x = "rmpi_imp", y = "count")) +
geom_bar(fill = "#61adff",
color = "white")
##spread in the imputed dataset
#histogram/distribution faceted by timepoint
new_imp %>%
ggplot(aes(x = "rmpi_imp", stat = "count")) +
geom_bar(fill = "#61adff",
color = "white")
View(data_filt)
View(new_imp)
new_imp %>%
group_by(time, rmpi_imp) %>%
count()
##spread in the imputed dataset
rmpi_imp_df <- new_imp %>%
group_by(time, rmpi_imp) %>%
count()
View(rmpi_imp_df)
rmpi_imp_df %>%
ggplot(aes(x = n)) +
geom_histogram(fill = "#61adff",
color = "white") +
facet_wrap(~time)
#histogram/distribution faceted by timepoint
rmpi_imp_df %>%
ggplot(aes(x = rmpi_imp)) +
geom_histogram(fill = "#61adff",
color = "white") +
facet_wrap(~time)
ggplot(df) +
geom_bar(aes(x = "rmpi_imp", y = "n"),
fill = as.factor(year),
position = "dodge", stat = "count") +
facet_wrap(~time)
ggplot(new_imp) +
geom_bar(aes(x = "rmpi_imp", y = "n"),
fill = as.factor(year),
position = "dodge", stat = "count") +
facet_wrap(~time)
ggplot(new_imp) +
geom_bar(aes(x = "rmpi_imp", y = "n"),
#fill = as.factor(year),
position = "dodge", stat = "count") +
facet_wrap(~time)
ggplot(new_imp, aes(x = "rmpi_imp", y = "n")) +
geom_bar(fill = "#0073C2FF", stat = "identity") +
geom_text(aes(label = n), vjust = -0.3) +
theme_pubclean()
ggplot(new_imp, aes(x = "rmpi_imp", y = "n")) +
geom_bar(fill = "#0073C2FF", stat = "identity") +
geom_text(aes(label = n), vjust = -0.3)
ggplot(new_imp, aes(x = "rmpi_imp", y = "n")) +
geom_bar(fill = "#0073C2FF", stat = "identity")
ggplot(new_imp, aes(x = "rmpi_imp", y = "n")) +
geom_bar(fill = "#0073C2FF", stat = "count")
ggplot(rmpi_imp_df, aes(x = "rmpi_imp", y = "n")) +
geom_bar(fill = "#0073C2FF", stat = "count")
rmpi_imp_df %>%
ggplot(aes(x = rmpi_imp, y = n)) +
geom_bar(fill = "#61adff",
color = "white") +
facet_wrap(~time)
#histogram/distribution faceted by timepoint
rmpi_imp_df %>%
ggplot(aes(x = rmpi_imp, y = n)) +
geom_bar(fill = "#61adff",
color = "white",
stat = "count") +
facet_wrap(~time)
rmpi_imp_df %>%
ggplot(aes(x = "rmpi_imp", y = "n")) +
geom_bar(fill = "#61adff",
color = "white",
stat = "count")
rmpi_imp_df %>%
ggplot(aes(x = "rmpi_imp", y = "n")) +
geom_bar()
##spread in the imputed dataset
new_imp %>%
ggplot(aes(x = rmpi_imp)) +
geom_density()
##spread in the imputed dataset
new_imp %>%
ggplot(aes(x = rmpi_imp)) +
geom_histogram()
##spread in the imputed dataset
new_imp %>%
ggplot(aes(x = rmpi_imp)) +
geom_histogram(fill = "#61adff",
color = "white") +
facet_wrap(~time)
data_filt %>%
filter(scale_name == "RMPI") %>%
ggplot(aes(x = score)) +
geom_histogram(fill = "#61adff",
color = "white") +
facet_wrap(~time) #A lot of 0s - similar patterns at all of the timepoints. This is the outcome variable, so not going to transform it. Perhaps a zero-inflated model would be more appropriate.
new_imp %>%
ggplot(aes(x = rmpi_imp)) +
geom_histogram(fill = "#61adff",
color = "white") +
facet_wrap(~time)
new_imp %>%
ggplot(aes(x = log10(1+rmpi_imp)) +
geom_histogram(fill = "#61adff",
color = "white") +
facet_wrap(~time)
# rmpi_imp_df <- new_imp %>%
#   group_by(time, rmpi_imp) %>%
#   count()
#histogram/distribution faceted by timepoint
rmpi_imp_df %>%
new_imp %>%
ggplot(aes(x = log10(1+rmpi_imp)) +
geom_histogram(fill = "#61adff",
color = "white") +
facet_wrap(~time)
new_imp %>%
new_imp %>%
ggplot(aes(x = log10(1+rmpi_imp))) +
geom_histogram(fill = "#61adff",
color = "white")
new_imp %>%
ggplot(aes(x = rmpi_imp)) +
geom_histogram(fill = "#61adff",
color = "white")# +
# facet_wrap(~time)
new_imp %>%
ggplot(aes(x = log10(1+rmpi_imp))) +
geom_histogram(fill = "#61adff",
color = "white")
knitr::opts_chunk$set(
echo = FALSE,
message = FALSE,
warning = FALSE,
include = FALSE,
cache = TRUE
)
library(tidyverse)
library(lme4)
library(performance)
l <- read_csv(here::here("data", "longitudinal-sim.csv"))
